{"version":3,"sources":["components/Header/Header.js","components/HeaderSlider/HeaderSlider.js","components/SearchSchedule/SearchSchedule.js","components/ScheduleResult/ScheduleResult.js","components/Schedule/Schedule.js","components/Homepage/Result.js","components/Loader/Loader.js","components/Homepage/Homepage.js","components/SearchShows/SearchShows.js","components/ShowResult/ShowResult.js","components/CastActor/CastActor.js","components/Shows/Shows.js","components/Summary/Summary.js","components/Episode/Episode.js","components/Pagination/Pagination.js","components/Episodes/Episodes.js","components/Footer/Footer.js","App.js","store/reducer.js","index.js"],"names":["Header","props","scrollDown","window","scroll","top","behavior","className","to","exact","src","alt","links","link","push","page","renderNav","map","key","onClick","open","HeaderSlider","_isMounted","state","images","this","buttonsDisabled","dotsDisabled","autoPlay","autoPlayInterval","duration","image","style","height","backgroundColor","margin","width","React","Component","SearchSchedule","id","type","defaultValue","today","Date","toLocaleDateString","year","split","splice","concat","num","length","join","todayDate","onChange","getDate","getCountry","value","getResults","ScheduleResult","data","show","medium","name","genres","genre","i","officialSite","status","runtime","schedule","time","days","day","Schedule","country","date","requestSent","fetch","then","response","json","setState","scrollTo","catch","error","console","log","e","target","displayResults","result","Result","color","season","number","airtime","Loader","Homepage","getSchedule","Fragment","connect","dispatch","SearchShows","placeholder","onKeyUp","showName","ShowResult","url","data-showid","language","premiered","getCast","CastActor","showActor","roles","getInfo","closest","getYear","role","_embedded","backToActor","actor","person","birthday","character","Shows","castClicked","tvShow","gotResults","setShows","dataset","showid","castResult","getBack","display","displayShows","shows","displayCast","Summary","match","params","summary","marginRight","withRouter","Episode","airdate","Pagination","pager","items","setPage","initialPage","prevProps","prevState","pageSize","totalPages","getPager","pageOfItems","slice","startIndex","endIndex","onChangePage","totalItems","currentPage","startPage","endPage","Math","ceil","min","pages","Array","keys","index","defaultProps","Episodes","bind","item","results","Footer","App","homepage","goToTop","basename","process","path","component","render","title","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.77dca8ac.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nimport {NavLink, Link} from 'react-router-dom';\n\n\nconst Header = (props) => {\n    const visitSite = () => {\n        window.open('https://www.tvmaze.com/', '_blank');\n    }\n\n    const renderNav = () => {\n        let links = [];\n\n        for (let link in props.links) {\n            links.push({\n                page: link,\n                link: props.links[link],\n            })\n        }\n        return links;\n    }\n\n    const scrollDown = () => {\n        window.scroll({top: 500, behavior: 'smooth'});\n    }\n\n    return (\n        <header>\n            <div className='inner-header'>\n                <Link to='/' exact='true'>\n                    <img src='./images/tvm-logo.png' \n                        alt='heading' \n                        className='header-heading' />\n                </Link>\n                <nav>\n                    <ul>\n                        {renderNav().map(link => (\n                            <li key={link.link} onClick={scrollDown}>\n                                <NavLink to={link.link} exact={true}>{link.page}</NavLink>\n                            </li>))}\n                    </ul>\n                </nav>\n                <img src='./images/nice-day.png' \n                     alt='logo' \n                     className='header-logo' \n                     onClick={visitSite} />\n            </div>\n        </header>\n    )\n}\n\n\nexport {Header}","import React from 'react';\n\nimport AliceCarousel from 'react-alice-carousel'\nimport 'react-alice-carousel/lib/alice-carousel.css'\n\n\nclass HeaderSlider extends React.Component {\n    _isMounted = false;\n\n    state = {\n        images: [\n            {alt: \"set\", src:\"./images/set.jpg\"}, \n            {alt: \"show\", src: \"./images/show.jpg\"}, \n            {alt: \"camera\", src: \"./images/camera.jpg\"}, \n            {alt: \"tv\", src: \"./images/tv.jpg\"}\n        ]\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    render() {\n        return (\n            <AliceCarousel buttonsDisabled={true}\n                           dotsDisabled={true}\n                           autoPlay={true}\n                           autoPlayInterval={6000}\n                           duration={1000} >\n                    {this.state.images.map(image => {\n                        return (\n                            <div key={image.alt}\n                                style={{height: '100%', backgroundColor: 'white', margin: '0'}}>\n                                <img src={image.src}\n                                     alt={image.alt} \n                                     style={{width: '100%'}} />\n                            </div>\n                        )\n                    })}\n            </AliceCarousel>\n        );\n    }\n};\n\n\nexport {HeaderSlider}","import React from 'react';\nimport './SearchSchedule.css';\n\n\n\nconst SearchSchedule = (props) => {\n    const todayDate = () => {\n        let today = new Date().toLocaleDateString();\n        today = today.split('/');\n        let year = today.splice(2, 1);\n        today = year.concat(today);\n        today = today.map(num => {\n            return num.length === 1 ? 0+num : num;\n        })\n\n        return today = today.join('-');\n        }\n\n\n    return(\n        <div className='search-schedule-form'>\n            <span id='date-label'>Select date</span>\n            <input type='date'  \n                    defaultValue={todayDate()}\n                    onChange={props.getDate} />\n            <span id='country-label'>Select country</span>\n            <select onChange={props.getCountry}>\n                <option value='AU'>Australia</option>\n                <option value='BR'>Brazil</option>\n                <option value='CN'>China</option>\n                <option value='FR'>France</option>\n                <option value='JP'>Japan</option>\n                <option value='RU'>Russian Federation</option>\n                <option value='US'>USA</option>\n                <option value='GB'>United Kingdom</option>\n            </select>\n            <input type='submit' \n                    className='search-btn get-schedule-btn'  \n                    value='GET SCHEDULE' \n                    onClick={props.getResults} />\n        </div>\n    )\n}\n\n\nexport {SearchSchedule}","import React, {Component} from 'react';\nimport './ScheduleResult.css';\n\n\nclass ScheduleResult extends Component {\n    render () {\n        return (\n            <div className='schedule-result'>\n                <img src={this.props.data.show.image ? \n                this.props.data.show.image.medium : './images/no-img.png'} alt='show-img' />\n                <div className='result-info'>\n                    <h4>{this.props.data.show.name}</h4>\n                    <div className='genres'>\n                        {this.props.data.show.genres.map((genre,i)=>(\n                            <span key={i} className='genre'>{genre}</span>\n                        ))}\n                    </div>\n                    <p className='official-site' onClick={()=>{window.open(this.props.data.show.officialSite, '_blank')}}><b>Official site: </b>{this.props.data.show.officialSite}</p>\n                    <p><b>Status: </b>{this.props.data.show.status}</p>\n                    <p><b>Runtime: </b>{this.props.data.show.runtime} min.</p>\n                    <p><b>Type: </b>{this.props.data.show.type}</p>\n                    <p><b>Schedule: </b>{this.props.data.show.schedule.time} &nbsp; \n                    {this.props.data.show.schedule.days.map((day, i) => (\n                        <span key={i} className='genre'>{day}</span>\n                    ))}\n                    </p>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport {ScheduleResult}","import React, {Component} from 'react';\nimport './Schedule.css';\n\nimport {SearchSchedule} from '../SearchSchedule/SearchSchedule';\nimport {ScheduleResult} from '../ScheduleResult/ScheduleResult';\n\n\nclass Schedule extends Component {\n    state = {\n        data: [],\n        country: '',\n        date: '',\n        requestSent: false,\n    }\n\n    getResults = () => {\n        fetch(`https://api.tvmaze.com/schedule?country=${this.state.country}&date=${this.state.date}`)\n        .then(response => response.json())\n        .then(data => {\n            this.setState({\n                data: data.length ? data : [],\n                requestSent: true,\n            })\n\n            window.scrollTo({top: 500, behavior: 'smooth'});\n        })\n        .catch(error => {\n            console.log(error);\n\n            this.setState({\n                data: []\n            })\n        })\n    }\n\n    getDate = (e) => {\n        this.setState({\n            date: e.target.value,\n        })\n    }\n\n    getCountry = (e) => {\n        this.setState({\n            country: e.target.value,\n        })\n    }\n\n    displayResults = (data) => {\n        if (data.length && this.state.requestSent) {\n            return data.map((result, i) => {\n                return <ScheduleResult data={result} key={i} />\n            })\n        } else if (data.length === 0 && this.state.requestSent) {\n            return <div><i>No results available.</i></div>\n        } else {\n            return <span></span>\n        }\n    }\n\n    render () {\n        return (\n            <section className='schedule'>\n                <SearchSchedule getResults={this.getResults}\n                                getDate={this.getDate}\n                                getCountry={this.getCountry} />\n                <div className='schedule-results'>\n                    {this.displayResults(this.state.data)}\n                </div>\n            </section>\n        )\n    }\n}\n\n\nexport {Schedule}","import React from 'react';\nimport './Result.css';\n\nimport {Link} from 'react-router-dom';\n\n\nconst Result = (props) => {\n    return (\n        <div className='episode'>\n            <div className='episode-info'>\n                <Link to={`/shows/${props.data.show.id}`}>\n                    <p className='episode-name'>\n                       {props.data.show.name}\n                    </p>\n                </Link>\n                <p style={{color: '#3C948B'}}>\n                    {props.data.name}&nbsp;\n                    <img src='images/camera.png' \n                         alt='tv' />\n                </p>\n                <p>\n                    <b>Season</b>: {props.data.season}, \n                    <b> Episode</b>: {props.data.number},\n                    <b> Airtime</b>: {props.data.airtime}\n                </p>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Result;"," \nimport React from 'react';\nimport './Loader.css';\n\n\nconst Loader = () => {\n    return (\n        <div className='loader'>\n            <div className=\"lds-ellipsis\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Loader;","import React from 'react';\nimport './Homepage.css';\n\nimport Result from './Result';\nimport Loader from '../Loader/Loader';\n\nimport {connect} from 'react-redux';\n\n\nclass Homepage extends React.Component {\n    componentDidMount () {\n        fetch(`https://api.tvmaze.com/schedule?country=US`)\n        .then(response => response.json())\n        .then(data => {\n\n            this.props.getSchedule(data)\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.props.schedule.length ? \n                <section className='homepage-schedule'>\n                    <h1>Schedule for today</h1>\n                    {this.props.schedule.map((show,i) => {\n                        return <Result key={i}\n                                       data={show} />\n                    })}\n                </section>\n                :\n                <Loader />}\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        schedule: state.schedule\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getSchedule: (data) => dispatch({type: 'SET_SCHEDULE', schedule: data})\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);","import React, {Component} from 'react';\nimport './SearchShows.css';\n\n\nclass SearchShows extends Component {\n    render () {\n        return (\n            <div className='search-field'>\n                <input type='text' \n                       placeholder='SEARCH TV SHOW' \n                       onKeyUp={this.props.showName} />\n                <button className='search-btn'\n                        onClick={this.props.getResults}>GET RESULTS</button>\n            </div>\n        )\n    }\n}\n\n\nexport {SearchShows}","import React from 'react';\nimport './ShowResult.css';\n\nimport {Link} from 'react-router-dom';\n\n\n\nconst ShowResult = (props) =>{\n    return(\n        <div className='result' \n             id={props.data.show.url} \n             data-showid={props.data.show.id}>\n                <img src={props.data.show.image ? \n                props.data.show.image.medium : './images/no-img.png'} alt='show-img' />\n                <div className='result-info'>\n                    <h4>{props.data.show.name}</h4>\n                    <div className='genres'>\n                        {props.data.show.genres.map((genre,i)=>(\n                            <span key={i} className='genre'>{genre}</span>\n                        ))}\n                    </div>\n                    <p><b>Language: </b>{props.data.show.language}</p>\n                    <p><b>Runtime: </b>{props.data.show.runtime} min.</p>\n                    <p><b>Status: </b>{props.data.show.status}</p>\n                    <p><b>Premiered: </b>{props.data.show.premiered}</p>\n                    <div className='btns'>\n                        <button className='search-btn' \n                                onClick={props.getCast}>SEE CAST</button>\n                        <Link to={`/shows/${props.data.show.id}`}><button                   \n                              className='search-btn'> MORE </button></Link>\n                    </div>\n                </div>\n        </div>\n    )\n}\n\n\nexport {ShowResult}","import React, {Component, Fragment} from 'react';\nimport './CastActor.css';\n\n\nclass CastActor extends Component {\n    state = {\n        showActor: true,\n        roles: []\n    }\n\n    getInfo = (e) => {\n        fetch(`https://api.tvmaze.com/people/${e.target.closest('.actor').id}/castcredits?embed=show`)\n        .then(response => response.json())\n        .then(data => {\n\n            this.setState({\n                roles: data,\n                showActor: false\n            })\n        })\n    }\n\n    getYear = (role) => {\n        let year = '';\n\n        if (role._embedded.show.premiered) {\n            year = role._embedded.show.premiered.split('-');\n            year = `(${year[0]})`;\n        }\n\n        return year;\n    }\n\n    backToActor = () => {\n        this.setState({ showActor: true })\n    }\n\n    render () {\n        return(\n            <Fragment>\n                {this.state.showActor ?\n                <div className='actor' id={this.props.actor.person.id}>\n                    <img src={this.props.actor.person.image ? \n                    this.props.actor.person.image.medium : './images/no-img.png'} alt='show-img' />\n                    <div className='actor-info'>\n                        <h4>{this.props.actor.person.name}</h4>\n                        <p><b>Birth date: </b>{this.props.actor.person.birthday}</p>\n                        <p><b>Character: </b>{this.props.actor.character.name}</p>\n                        <button className='search-btn'\n                                onClick={this.getInfo}>\n                            MORE ROLES\n                        </button>\n                    </div>\n                </div>\n                :\n                <div className='actor'>\n                    <div className='actor-info'>\n                        <ul>\n                        {this.state.roles.map((role, i) => {\n                            return (\n                                <li key={i}>\n                                    {role._embedded.show.name} {this.getYear(role)}\n                                </li>\n                            )\n                        })}\n                        </ul>\n                        <button className='search-btn actor-roles-btn'\n                                onClick={this.backToActor}>\n                            BACK\n                        </button>\n                    </div>\n                </div>}\n            </Fragment>\n        )\n    }\n}\n\n\nexport {CastActor}","import React, {Component} from 'react';\nimport './Shows.css';\n\nimport {connect} from 'react-redux';\n\nimport {SearchShows} from '../SearchShows/SearchShows';\nimport {ShowResult} from '../ShowResult/ShowResult';\nimport {CastActor} from '../CastActor/CastActor';\n\n\n\nclass Shows extends Component {\n    state = {\n        castClicked: false,\n        tvShow: '',\n        data: [],\n        gotResults: false,\n    }\n    \n    showName = (e) => {\n            this.setState({\n                tvShow: e.target.value,\n            })\n      \n            e.key === 'Enter' && this.getResults();\n    }\n      \n    getResults = () => {\n        window.scrollTo({top: 500, behavior:'smooth'});\n\n        fetch(`https://api.tvmaze.com/search/shows?q=${this.state.tvShow}`)\n        .then(response => response.json())\n        .then(data => {\n\n            this.props.setShows(data);\n \n            this.setState({\n                castClicked: false,\n                gotResults: true,\n            })\n        })\n        .catch(error => {\n            console.log(error);\n\n            this.setState({\n                castClicked: false,\n                gotResults: true,\n            })\n        })\n    }\n\n    getCast = (e) => {\n        fetch(`https://api.tvmaze.com/shows/${e.target.closest('.result').dataset.showid}/cast`)\n        .then(response => response.json())\n        .then(data => {\n            window.scrollTo({top: 500, behavior: 'smooth'});\n            \n            this.setState ({\n                castClicked: true,\n                castResult: data.length ? data : false,\n            })\n        })\n        .catch(error => {\n            console.log(error);\n\n            this.setState ({\n                castClicked: true,\n                castResult: false,\n            })\n        })\n    }\n\n    getBack = (e) => {\n        window.scrollTo({top: 500, behavior: 'smooth'});\n\n        this.setState({\n            castClicked: false,\n        })\n\n        e.target.style.display = 'none';\n    }\n\n    displayShows = () => {\n        if (this.props.shows.length) {\n            return this.props.shows.map((show, i) => (\n                <ShowResult data={show} \n                            key={i} \n                            getCast={this.getCast} />)) \n        } else if (this.state.gotResults) {\n            return  <div className='no-matching-results'>No matching results.</div>\n        } else {\n            return <span></span>\n        }\n    }\n\n    displayCast = () => {\n        if (this.state.castResult) {\n            return this.state.castResult.map((actor, i) => <CastActor actor={actor} key={i} />);\n        } else {\n            return  <div className='no-cast'>No cast available yet.</div>\n        }\n    }\n\n\n    render () {\n        return (\n            <section className='results'>\n                <SearchShows showName={this.showName} getResults={this.getResults} />\n                {this.state.castClicked ? \n                this.displayCast() : this.displayShows()}\n                <button className='back-to-results' \n                        onClick={this.getBack}\n                        style={this.state.castClicked ? {display: `block`} : {display: `none`}}\n                        >\n                        &laquo; BACK\n                </button>\n            </section>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        shows: state.shows\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setShows: (data) => dispatch({type: 'SET_SHOWS', shows: data})\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shows);","import React from 'react';\nimport './Summary.css';\n\nimport {withRouter} from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\n\nclass Summary extends React.Component {\n    state = {\n        data: null,\n    }\n\n    componentDidMount() {\n        fetch(`https://api.tvmaze.com/shows/${this.props.match.params.id}`)\n        .then(response => response.json())\n        .then(data => {\n\n            this.setState({\n                data: data,\n            })\n        })\n    }\n\n    render() {\n        return (\n            this.state.data ? \n            <div className='summary'>\n                <img src={this.state.data.image ? this.state.data.image.medium : '/images/no-img.png'} \n                     alt='show img'/>\n                <div className='summary-info'>\n                    {this.state.data.summary ? this.state.data.summary : 'No summary available yet.'}\n                    <div className='summary-btns'>\n                        <Link to={`/shows/${this.props.match.params.id}/episodes`}>\n                                <button className='search-btn'\n                                        style={{marginRight: '10px'}}>\n                                    GET EPISODES\n                                </button>\n                        </Link>\n                        <Link to='/shows'>\n                            <button className='search-btn'>&laquo; SEARCH</button>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n            :\n            <div></div>\n        )\n    }\n}\n\n\nexport default withRouter(Summary)","import React from 'react';\nimport './Episode.css';\n\nconst Episode = (props) => {\n    return (\n        <div className='episode'>\n            <img src={props.data.image ? props.data.image.medium : '../../images/no-img.png'} alt='poster' />\n            <div className='episode-info'>\n                <p className='episode-name'>{props.data.name}</p>\n                <p>\n                    <b>Season</b>: {props.data.season},\n                    <b> Episode</b>: {props.data.number},\n                    <b> Airdate</b>: {props.data.airdate}\n                </p>\n                {props.data.summary ?\n                <p>\n                    <b>Summary</b>: {props.data.summary}\n                </p> : null}\n            </div>\n        </div>\n    )\n}\n\n\nexport {Episode};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Pagination.css';\n\n\n\nconst propTypes = {\n    items: PropTypes.array.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    initialPage: PropTypes.number,\n    pageSize: PropTypes.number\n}\n\nconst defaultProps = {\n    initialPage: 1,\n    pageSize: 30\n}\n\nclass Pagination extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { pager: {} };\n    }\n\n    UNSAFE_componentWillMount() {\n        // set page if items array isn't empty\n        if (this.props.items && this.props.items.length) {\n            this.setPage(this.props.initialPage);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // reset page if items array has changed\n        if (this.props.items !== prevProps.items) {\n            this.setPage(this.props.initialPage);\n        }\n    }\n\n    setPage(page) {\n        window.scroll({top: '400', behavior: 'smooth'});\n\n        var { items, pageSize } = this.props;\n        var pager = this.state.pager;\n\n        if (page < 1 || page > pager.totalPages) {\n            return;\n        }\n\n        // get new pager object for specified page\n        pager = this.getPager(items.length, page, pageSize);\n\n        // get new page of items from items array\n        var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n\n        // update state\n        this.setState({ pager: pager });\n\n        // call change page function in parent component\n        this.props.onChangePage(pageOfItems);\n    }\n\n    getPager(totalItems, currentPage, pageSize) {\n        // default to first page\n        currentPage = currentPage || 1;\n\n        // default page size is 10\n        pageSize = pageSize || 10;\n\n        // calculate total pages\n        var totalPages = Math.ceil(totalItems / pageSize);\n\n        var startPage, endPage;\n        if (totalPages <= 10) {\n            // less than 10 total pages so show all\n            startPage = 1;\n            endPage = totalPages;\n        } else {\n            // more than 10 total pages so calculate start and end pages\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage + 4 >= totalPages) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 5;\n                endPage = currentPage + 4;\n            }\n        }\n\n        // calculate start and end item indexes\n        var startIndex = (currentPage - 1) * pageSize;\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n        // create an array of pages to ng-repeat in the pager control\n        var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\n\n        // return object with all pager properties required by the view\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n    }\n\n    render() {\n        var pager = this.state.pager;\n\n        if (!pager.pages || pager.pages.length <= 1) {\n            // don't display pager if there is only 1 page\n            return null;\n        }\n\n        return (\n            <ul className=\"pagination\">\n                <li className={pager.currentPage === 1 ? 'disabled' : ''} onClick={() => this.setPage(1)}>\t\n                    &lt;&lt;\n                </li>\n                <li className={pager.currentPage === 1 ? 'disabled' : ''} onClick={() => this.setPage(pager.currentPage - 1)}>\n                    Previous\n                </li>\n                {pager.pages.map((page, index) =>\n                    <li key={index} className={pager.currentPage === page ? 'active' : ''} onClick={() => this.setPage(page)}>\n                        {page}\n                    </li>\n                )}\n                <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''} onClick={() => this.setPage(pager.currentPage + 1)}>\n                    Next\n                </li>\n                <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''} onClick={() => this.setPage(pager.totalPages)}> \n                    &gt;&gt;\n                </li>\n            </ul>\n        );\n    }\n}\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\nexport default Pagination;","import React from 'react';\nimport './Episodes.css';\n\nimport {withRouter} from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nimport {Episode} from '../Episode/Episode';\nimport Pagination from '../Pagination/Pagination';\n\n\nclass Episodes extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: [],\n            pageOfItems: []\n        }\n\n        this.onChangePage = this.onChangePage.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(`https://api.tvmaze.com/shows/${this.props.match.params.id}/episodes`)\n        .then(response => response.json())\n        .then(data => {\n            \n            this.setState({\n                data: data\n            })\n        })\n        .catch(error => console.log(error))\n    }\n\n    onChangePage(pageOfItems) {\n        // update state with new page of items\n        this.setState({ pageOfItems: pageOfItems });\n    }\n\n    render() {\n        return (\n            <section className='episodes'>\n                {this.state.pageOfItems.map((item, i) => {\n                    return <Episode data={item} \n                                    results={this.state.data}\n                                    key={i} />\n                })}\n                <Pagination items={this.state.data} onChangePage={this.onChangePage} />\n                <Link to='/shows'>\n                    <button className='search-btn episodes-back-btn'\n                            onClick={() => {window.scroll({top: 600, behavior: 'smooth'})}}>\n                        SEARCH SHOWS\n                    </button>\n                </Link>\n            </section>\n        )\n    }\n}\n\n\nexport default withRouter(Episodes);","import React from 'react';\nimport './Footer.css';\n\n\nconst Footer = () => {\n    return (\n        <footer>\n            Created with \n            <img src='images/heart.png' \n                 alt='heart' \n                 className='heart-img' /> \n            and <span className='react-js'>React.js</span> \n            <img src='images/react-logo.png' \n                alt='react logo' \n                className='react-img' />\n        </footer>\n    )\n}\n\n\nexport {Footer};\n","import React, {Component} from 'react';\nimport './App.css';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nimport {Header} from './components/Header/Header';\nimport {HeaderSlider} from './components/HeaderSlider/HeaderSlider';\nimport {Schedule} from './components/Schedule/Schedule';\nimport Homepage from './components/Homepage/Homepage';\nimport Shows from './components/Shows/Shows';\nimport Summary from './components/Summary/Summary';\nimport Episodes from './components/Episodes/Episodes';\nimport {Footer} from './components/Footer/Footer';\n\nclass App extends Component {\n  state = {\n    links: {\n      homepage: '/',\n      shows: '/shows',\n      schedule: '/schedule',\n    }\n  }\n\n  goToTop = () => {\n    window.scroll({top: 0, behavior: 'smooth'})\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Header links={this.state.links} />\n          <HeaderSlider />\n          <main>\n            <Switch>\n              <Route path='/' exact component={Homepage} />\n              <Route path={this.state.links.shows} exact render={() => <Shows />} />\n              <Route path={this.state.links.schedule} exact render={() => <Schedule />} />\n              <Route path={`${this.state.links.shows}/:id`} exact render={() => <Summary />} />\n              <Route path={`${this.state.links.shows}/:id/episodes`} exact component={Episodes} />\n            </Switch>\n          </main>\n          <Footer />\n          <img className='arrow-up' \n              src='./images/arrow.png' \n              alt='arrow-up'\n              title='Go to top' \n             onClick={this.goToTop} />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\n    shows: [],\n    schedule: []\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case 'SET_SHOWS':\n            return {\n                ...state,\n                shows: action.shows\n            }\n        case 'SET_SCHEDULE':\n            return {\n                ...state,\n                schedule: action.schedule\n            }\n        default:\n            return state;\n    }\n}\n\n\n\nexport {reducer}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducer } from './store/reducer';\nimport { Provider } from 'react-redux';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}